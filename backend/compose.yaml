version: '3.9'

services:
  kafka:
    image: apache/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka-data:/var/lib/kafka/data

  auth-db:
    image: postgres:15
    container_name: auth-db
    environment:
      POSTGRES_DB: service-auth
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"
    volumes:
      - auth-data:/var/lib/postgresql/data

  post-db:
    image: postgres:15
    container_name: post-db
    environment:
      POSTGRES_DB: service-post
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    ports:
      - "5433:5432"
    volumes:
      - post-data:/var/lib/postgresql/data

  message-db:
    image: postgres:15
    container_name: message-db
    environment:
      POSTGRES_DB: service-message
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    ports:
      - "5434:5432"
    volumes:
      - message-data:/var/lib/postgresql/data

  profile-db:
    image: postgres:15
    container_name: profile-db
    environment:
      POSTGRES_DB: service-profile
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    ports:
      - "5435:5432"
    volumes:
      - profile-data:/var/lib/postgresql/data

  eureka:
    build:
      context: .
      dockerfile: eurukaserver/Dockerfile
    ports:
      - "8761:8761"
    environment:
      SPRING_APPLICATION_NAME: eurukaserver
      SERVER_PORT: 8761
      EUREKA_CLIENT_REGISTER_WITH_EUREKA: "false"
      EUREKA_CLIENT_FETCH_REGISTRY: "false"

  auth:
    build:
      context: .
      dockerfile: service-auth/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - auth-db
      - eureka
    environment:
      SPRING_APPLICATION_NAME: service-auth
      SPRING_DATASOURCE_URL: jdbc:postgresql://auth-db:5432/service-auth
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: admin
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: "true"
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka:8761/eureka/

  post:
    build:
      context: .
      dockerfile: service-post/Dockerfile
    ports:
      - "8084:8084"
    depends_on:
      - post-db
      - eureka
    environment:
      SPRING_APPLICATION_NAME: service-post
      SPRING_DATASOURCE_URL: jdbc:postgresql://post-db:5432/service-post
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: admin
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: "true"
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka:8761/eureka/
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  message:
    build:
      context: .
      dockerfile: service-message/Dockerfile
    ports:
      - "8083:8083"
    depends_on:
      - message-db
      - eureka
    environment:
      SPRING_APPLICATION_NAME: service-message
      SPRING_DATASOURCE_URL: jdbc:postgresql://message-db:5432/service-message
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: admin
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: "true"
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka:8761/eureka/

  profile:
    build:
      context: .
      dockerfile: service-profile/Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - profile-db
      - eureka
    environment:
      SPRING_APPLICATION_NAME: service-profile
      SPRING_DATASOURCE_URL: jdbc:postgresql://profile-db:5432/service-profile
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: admin
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: "true"
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka:8761/eureka/
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  apigateway:
    build:
      context: .
      dockerfile: apigateway/Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - eureka
    environment:
      SPRING_APPLICATION_NAME: apigateway
      SERVER_PORT: 8082
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: "true"
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka:8761/eureka/

volumes:
  kafka-data:
  auth-data:
  post-data:
  message-data:
  profile-data:
